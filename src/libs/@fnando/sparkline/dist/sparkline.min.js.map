{"version":3,"sources":["webpack:///webpack/bootstrap b30b9f48529035b8b033","webpack:///./src/sparkline.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","getY","max","height","diff","value","parseFloat","toFixed","buildElement","tag","attrs","element","document","createElementNS","setAttribute","sparkline","svg","entries","options","concat","_toConsumableArray","querySelectorAll","forEach","removeChild","removeChildren","length","map","entry","onmousemove","onmouseout","interactive","spotRadius","spotDiameter","cursorWidth","strokeWidth","attributes","fetch","values","width","fullHeight","Math","apply","lastItemIndex","offset","datapoints","pathY","pathCoords","index","x","y","push","assign","path","fill","stroke","appendChild","cursor","class","x1","x2","y1","y2","stroke-width","spot","cx","cy","r","addEventListener","event","mouseX","offsetX","nextDataPoint","find","previousDataPoint","indexOf","currentDataPoint","halfway"],"mappings":"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","file":"sparkline.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b30b9f48529035b8b033","function getY(max, height, diff, value) {\n  return parseFloat((height - (value * height / max) + diff).toFixed(2));\n}\n\nfunction removeChildren(svg) {\n  [...svg.querySelectorAll(\"*\")].forEach(element => svg.removeChild(element));\n}\n\nfunction defaultFetch(entry) {\n  return entry.value;\n}\n\nfunction buildElement(tag, attrs) {\n  const element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n  for (let name in attrs) {\n    element.setAttribute(name, attrs[name]);\n  }\n\n  return element;\n}\n\nexport function sparkline(svg, entries, options) {\n  removeChildren(svg);\n\n  if (entries.length <= 1) {\n    return;\n  }\n\n  options = options || {};\n\n  if (typeof(entries[0]) === \"number\") {\n    entries = entries.map(entry => {\n      return {value: entry};\n    });\n  }\n\n  // This function will be called whenever the mouse moves\n  // over the SVG. You can use it to render something like a\n  // tooltip.\n  const onmousemove = options.onmousemove;\n\n  // This function will be called whenever the mouse leaves\n  // the SVG area. You can use it to hide the tooltip.\n  const onmouseout = options.onmouseout;\n\n  // Should we run in interactive mode? If yes, this will handle the\n  // cursor and spot position when moving the mouse.\n  const interactive = (\"interactive\" in options) ? options.interactive : !!onmousemove;\n\n  // Define how big should be the spot area.\n  const spotRadius = options.spotRadius || 2;\n  const spotDiameter = spotRadius * 2;\n\n  // Define how wide should be the cursor area.\n  const cursorWidth = options.cursorWidth || 2;\n\n  // Get the stroke width; this is used to compute the\n  // rendering offset.\n  const strokeWidth = parseFloat(svg.attributes[\"stroke-width\"].value);\n\n  // By default, data must be formatted as an array of numbers or\n  // an array of objects with the value key (like `[{value: 1}]`).\n  // You can set a custom function to return data for a different\n  // data structure.\n  const fetch = options.fetch || defaultFetch;\n\n  // Retrieve only values, easing the find for the maximum value.\n  const values = entries.map(entry => fetch(entry));\n\n  // The rendering width will account for the spot size.\n  const width = parseFloat(svg.attributes.width.value) - spotDiameter * 2;\n\n  // Get the SVG element's full height.\n  // This is used\n  const fullHeight = parseFloat(svg.attributes.height.value);\n\n  // The rendering height accounts for stroke width and spot size.\n  const height = fullHeight - (strokeWidth * 2) - spotDiameter;\n\n  // The maximum value. This is used to calculate the Y coord of\n  // each sparkline datapoint.\n  const max = Math.max(...values);\n\n  // Some arbitrary value to remove the cursor and spot out of\n  // the viewing canvas.\n  const offscreen = -1000;\n\n  // Cache the last item index.\n  const lastItemIndex = values.length - 1;\n\n  // Calculate the X coord base step.\n  const offset = width / lastItemIndex;\n\n  // Hold all datapoints, which is whatever we got as the entry plus\n  // x/y coords and the index.\n  const datapoints = [];\n\n  // Hold the line coordinates.\n  const pathY = getY(max, height, strokeWidth + spotRadius, values[0]);\n  let pathCoords = `M${spotDiameter} ${pathY}`;\n\n  values.forEach((value, index) => {\n    const x = index * offset + spotDiameter;\n    const y = getY(max, height, strokeWidth + spotRadius, value);\n\n    datapoints.push(Object.assign({}, entries[index], {\n      index: index,\n      x: x,\n      y: y\n    }));\n\n    pathCoords += ` L ${x} ${y}`;\n  });\n\n  const path = buildElement(\"path\", {\n    d: pathCoords,\n    fill: \"none\"\n  });\n\n  let fillCoords = `${pathCoords} V ${fullHeight} L ${spotDiameter} ${fullHeight} Z`;\n\n  const fill = buildElement(\"path\", {\n    d: fillCoords,\n    stroke: \"none\"\n  });\n\n  svg.appendChild(path);\n  svg.appendChild(fill);\n\n  if (!interactive) {\n    return;\n  }\n\n  const cursor = buildElement(\"line\", {\n    class: \"sparkline--cursor\",\n    x1: offscreen,\n    x2: offscreen,\n    y1: 0,\n    y2: fullHeight,\n    \"stroke-width\": cursorWidth\n  });\n\n  const spot = buildElement(\"circle\", {\n    class: \"sparkline--spot\",\n    cx: offscreen,\n    cy: offscreen,\n    r: spotRadius\n  });\n\n  svg.appendChild(cursor);\n  svg.appendChild(spot);\n\n  svg.addEventListener(\"mouseout\", event => {\n    cursor.setAttribute(\"x1\", offscreen);\n    cursor.setAttribute(\"x2\", offscreen);\n\n    spot.setAttribute(\"cx\", offscreen);\n\n    if (onmouseout) {\n      onmouseout(event);\n    }\n  });\n\n  svg.addEventListener(\"mousemove\", event => {\n    const mouseX = event.offsetX;\n\n    let nextDataPoint = datapoints.find(entry => {\n      return entry.x >= mouseX;\n    });\n\n    if (!nextDataPoint) {\n      nextDataPoint = datapoints[lastItemIndex];\n    }\n\n    let previousDataPoint = datapoints[datapoints.indexOf(nextDataPoint) - 1];\n    let currentDataPoint;\n    let halfway;\n\n    if (previousDataPoint) {\n      halfway = previousDataPoint.x + ((nextDataPoint.x - previousDataPoint.x) / 2);\n      currentDataPoint = mouseX >= halfway ? nextDataPoint : previousDataPoint;\n    } else {\n      currentDataPoint = nextDataPoint;\n    }\n\n    const x = currentDataPoint.x;\n    const y = currentDataPoint.y;\n\n    spot.setAttribute(\"cx\", x);\n    spot.setAttribute(\"cy\", y);\n\n    cursor.setAttribute(\"x1\", x);\n    cursor.setAttribute(\"x2\", x);\n\n    if (onmousemove) {\n      onmousemove(event, currentDataPoint);\n    }\n  });\n}\n\nexport default sparkline;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sparkline.js"],"sourceRoot":""}