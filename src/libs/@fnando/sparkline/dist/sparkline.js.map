{"version":3,"sources":["webpack:///webpack/bootstrap ce486f6e607e90525df4","webpack:///./src/sparkline.js"],"names":["sparkline","getY","max","height","diff","value","parseFloat","toFixed","removeChildren","svg","querySelectorAll","forEach","removeChild","element","defaultFetch","entry","buildElement","tag","attrs","document","createElementNS","name","setAttribute","entries","options","length","map","onmousemove","onmouseout","interactive","spotRadius","spotDiameter","cursorWidth","strokeWidth","attributes","fetch","values","width","fullHeight","Math","offscreen","lastItemIndex","offset","datapoints","pathY","pathCoords","index","x","y","push","Object","assign","path","d","fill","fillCoords","stroke","appendChild","cursor","class","x1","x2","y1","y2","spot","cx","cy","r","addEventListener","event","mouseX","offsetX","nextDataPoint","find","previousDataPoint","indexOf","currentDataPoint","halfway"],"mappings":"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","file":"sparkline.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ce486f6e607e90525df4","function getY(max, height, diff, value) {\n  return parseFloat((height - (value * height / max) + diff).toFixed(2));\n}\n\nfunction removeChildren(svg) {\n  [...svg.querySelectorAll(\"*\")].forEach(element => svg.removeChild(element));\n}\n\nfunction defaultFetch(entry) {\n  return entry.value;\n}\n\nfunction buildElement(tag, attrs) {\n  const element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n  for (let name in attrs) {\n    element.setAttribute(name, attrs[name]);\n  }\n\n  return element;\n}\n\nexport function sparkline(svg, entries, options) {\n  removeChildren(svg);\n\n  if (entries.length <= 1) {\n    return;\n  }\n\n  options = options || {};\n\n  if (typeof(entries[0]) === \"number\") {\n    entries = entries.map(entry => {\n      return {value: entry};\n    });\n  }\n\n  // This function will be called whenever the mouse moves\n  // over the SVG. You can use it to render something like a\n  // tooltip.\n  const onmousemove = options.onmousemove;\n\n  // This function will be called whenever the mouse leaves\n  // the SVG area. You can use it to hide the tooltip.\n  const onmouseout = options.onmouseout;\n\n  // Should we run in interactive mode? If yes, this will handle the\n  // cursor and spot position when moving the mouse.\n  const interactive = (\"interactive\" in options) ? options.interactive : !!onmousemove;\n\n  // Define how big should be the spot area.\n  const spotRadius = options.spotRadius || 2;\n  const spotDiameter = spotRadius * 2;\n\n  // Define how wide should be the cursor area.\n  const cursorWidth = options.cursorWidth || 2;\n\n  // Get the stroke width; this is used to compute the\n  // rendering offset.\n  const strokeWidth = parseFloat(svg.attributes[\"stroke-width\"].value);\n\n  // By default, data must be formatted as an array of numbers or\n  // an array of objects with the value key (like `[{value: 1}]`).\n  // You can set a custom function to return data for a different\n  // data structure.\n  const fetch = options.fetch || defaultFetch;\n\n  // Retrieve only values, easing the find for the maximum value.\n  const values = entries.map(entry => fetch(entry));\n\n  // The rendering width will account for the spot size.\n  const width = parseFloat(svg.attributes.width.value) - spotDiameter * 2;\n\n  // Get the SVG element's full height.\n  // This is used\n  const fullHeight = parseFloat(svg.attributes.height.value);\n\n  // The rendering height accounts for stroke width and spot size.\n  const height = fullHeight - (strokeWidth * 2) - spotDiameter;\n\n  // The maximum value. This is used to calculate the Y coord of\n  // each sparkline datapoint.\n  const max = Math.max(...values);\n\n  // Some arbitrary value to remove the cursor and spot out of\n  // the viewing canvas.\n  const offscreen = -1000;\n\n  // Cache the last item index.\n  const lastItemIndex = values.length - 1;\n\n  // Calculate the X coord base step.\n  const offset = width / lastItemIndex;\n\n  // Hold all datapoints, which is whatever we got as the entry plus\n  // x/y coords and the index.\n  const datapoints = [];\n\n  // Hold the line coordinates.\n  const pathY = getY(max, height, strokeWidth + spotRadius, values[0]);\n  let pathCoords = `M${spotDiameter} ${pathY}`;\n\n  values.forEach((value, index) => {\n    const x = index * offset + spotDiameter;\n    const y = getY(max, height, strokeWidth + spotRadius, value);\n\n    datapoints.push(Object.assign({}, entries[index], {\n      index: index,\n      x: x,\n      y: y\n    }));\n\n    pathCoords += ` L ${x} ${y}`;\n  });\n\n  const path = buildElement(\"path\", {\n    d: pathCoords,\n    fill: \"none\"\n  });\n\n  let fillCoords = `${pathCoords} V ${fullHeight} L ${spotDiameter} ${fullHeight} Z`;\n\n  const fill = buildElement(\"path\", {\n    d: fillCoords,\n    stroke: \"none\"\n  });\n\n  svg.appendChild(path);\n  svg.appendChild(fill);\n\n  if (!interactive) {\n    return;\n  }\n\n  const cursor = buildElement(\"line\", {\n    class: \"sparkline--cursor\",\n    x1: offscreen,\n    x2: offscreen,\n    y1: 0,\n    y2: fullHeight,\n    \"stroke-width\": cursorWidth\n  });\n\n  const spot = buildElement(\"circle\", {\n    class: \"sparkline--spot\",\n    cx: offscreen,\n    cy: offscreen,\n    r: spotRadius\n  });\n\n  svg.appendChild(cursor);\n  svg.appendChild(spot);\n\n  svg.addEventListener(\"mouseout\", event => {\n    cursor.setAttribute(\"x1\", offscreen);\n    cursor.setAttribute(\"x2\", offscreen);\n\n    spot.setAttribute(\"cx\", offscreen);\n\n    if (onmouseout) {\n      onmouseout(event);\n    }\n  });\n\n  svg.addEventListener(\"mousemove\", event => {\n    const mouseX = event.offsetX;\n\n    let nextDataPoint = datapoints.find(entry => {\n      return entry.x >= mouseX;\n    });\n\n    if (!nextDataPoint) {\n      nextDataPoint = datapoints[lastItemIndex];\n    }\n\n    let previousDataPoint = datapoints[datapoints.indexOf(nextDataPoint) - 1];\n    let currentDataPoint;\n    let halfway;\n\n    if (previousDataPoint) {\n      halfway = previousDataPoint.x + ((nextDataPoint.x - previousDataPoint.x) / 2);\n      currentDataPoint = mouseX >= halfway ? nextDataPoint : previousDataPoint;\n    } else {\n      currentDataPoint = nextDataPoint;\n    }\n\n    const x = currentDataPoint.x;\n    const y = currentDataPoint.y;\n\n    spot.setAttribute(\"cx\", x);\n    spot.setAttribute(\"cy\", y);\n\n    cursor.setAttribute(\"x1\", x);\n    cursor.setAttribute(\"x2\", x);\n\n    if (onmousemove) {\n      onmousemove(event, currentDataPoint);\n    }\n  });\n}\n\nexport default sparkline;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sparkline.js"],"sourceRoot":""}